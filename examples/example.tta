func f1(x: bool) -> 123
func f2(y: bool) -> 456.78

var f3 = if true then f1 else f2

var x: int|float = f3(true)
var y: int|float = f3(false)
var z: int|float = x + y // This is allowed because the runtime type of x and y are bound together.
{
    var a: int
}
{
    var a: float
}

var sum3: (int,int,int)|(string, string, string)

var a = {
    12.34
    1234
    "foo"
}

var arr: int[] = [1,2,3,4]

var f = arr[5] + 5


var b: int = false
var lambda = f:int -> g:int -> (f * g, 5)

var ifVal = (if true then
    5 + 6 + 7 + 8)

var c = 1.
var d: float = 1e-10
var e = "Hello, world!"
var str: string = e
var cond = true

var g: (int -> int)

func foo: (-> -> int)
    func bar: (-> int)
        func baz: int
            10
var bar = -> -> x:int -> -> x

var str = if b then (if c then "foo" else "bar") else "baz"

var block = {
    1
    2
    3
}

func fib(0) -> 0
func fib(1) -> 1
func fib(x: int) -> fib(x-1) + fib(x-2)



/*
match foo
    case 0 -> zero()
    case (_, :int) -> one()
    case x: double
        two()
        x
    case y = 10
        foo()
*/
